import Head from "next/head";
import Header from "../../src/component.Header";
import TopBackground from "../../src/component.TopBackground";
import HorizontalSpacer from "../../src/component.HorizontalSpacer";
import Joke from "../../src/component.Joke";
import Settings from "../../src/component.Settings";
import Footer from "../../src/component.Footer";
import randomJokeIdGenerator from "../../utils/randomJokeIdGenerator";
import Link from "next/link";

function Jokes({ joke, nextJokeId }: { joke: any; nextJokeId: number }) {
    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <TopBackground />
            <Header />
            <div style={{ margin: "0 32px" }}>
                <HorizontalSpacer space={10} />
                <Joke joke={joke}></Joke>
                <HorizontalSpacer space={10} />
                <Link
                    href={{
                        pathname: "/jokes/[id]",
                    }}
                    as={`/jokes/${nextJokeId}`}
                >
                    <a>joke me</a>
                </Link>
                <HorizontalSpacer space={10} />
                <Settings />
            </div>
            <Footer />
        </>
    );
}

export async function getStaticPaths() {
    const res = await fetch("https://v2.jokeapi.dev/info");
    const info = await res.json();
    const englishJokesUpperLimit = 5 || info.jokes.idRange.en[1];
    const jokeIdArray = Array.from(Array(englishJokesUpperLimit).keys());

    const paths = jokeIdArray.map((id) => ({
        params: { id: id.toString() },
    }));

    return { paths, fallback: "blocking" };
}

export async function getStaticProps({ params }: any) {
    const infoResponse = await fetch("https://v2.jokeapi.dev/info");
    const info = await infoResponse.json();
    const [englishJokesLowerLimit, englishJokesUpperLimit] =
        info.jokes.idRange.en;
    const jokeResponse: any = await fetch(
        `https://v2.jokeapi.dev/joke/Any?idRange=${params.id}`
    );
    const joke: any = await jokeResponse.json();

    const nextJokeId = randomJokeIdGenerator(
        englishJokesLowerLimit,
        englishJokesUpperLimit,
        joke.id
    );
    return {
        props: {
            joke: joke,
            nextJokeId,
        },
        revalidate: 3600,
    };
}

export default Jokes;
